<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="mtb__radar__sensing_8c" kind="file" language="C++">
    <compoundname>mtb_radar_sensing.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">Ifx_RadarFMCW.h</includes>
    <includes local="yes">ifx_radar_sensing.h</includes>
    <includes local="yes">ifx_radar_sensing_rawdata.h</includes>
    <includes refid="mtb__radar__sensing_8h" local="yes">mtb_radar_sensing.h</includes>
    <includes local="yes">ifx_memory_alloc.h</includes>
    <incdepgraph>
      <node id="1">
        <label>mtb_radar_sensing.c</label>
        <link refid="mtb__radar__sensing_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ifx_radar_sensing.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>ifx_memory_alloc.h</label>
      </node>
      <node id="4">
        <label>Ifx_RadarFMCW.h</label>
      </node>
      <node id="6">
        <label>ifx_radar_sensing_rawdata.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmtb__radar__sensing__t" prot="public">mtb_radar_sensing_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="mtb__radar__sensing_8c_1a0f8666b7c1b00dae4ec6be92728069ab" prot="public" static="no">
        <name>IFX_RADAR_SENSING_MAX_VALUE_LENGTH</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="30" column="9" bodyfile="mtb_radar_sensing.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mtb__radar__sensing_8c_1a9805f98eb96ea85fabe5e9e6a19827aa" prot="public" static="no">
        <name>MTB_RADAR_SENSING_ERROR</name>
        <param><defname>x</defname></param>
        <initializer>                                            (((x) == IFX_STATUS_OK) ? CY_RSLT_SUCCESS :\
                                            CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR, <ref refid="group__group__mtb__radar__sensing__macros_1ga419d8e3286b07fec96057d305cf93bfc" kindref="member">CY_RSLT_MODULE_RADAR_SENSING</ref>, (x)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="32" column="9" bodyfile="mtb_radar_sensing.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mtb__radar__sensing_8c_1ad3ca2b2563fbf31e2c85f0acadce448c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void convert2FF</definition>
        <argsstring>(const ifx_radar_fmcw_frame_t *frame, ifx_ff_frame_t *ff_frame)</argsstring>
        <name>convert2FF</name>
        <param>
          <type>const ifx_radar_fmcw_frame_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>ifx_ff_frame_t *</type>
          <declname>ff_frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="57" column="13" bodyfile="mtb_radar_sensing.c" bodystart="57" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="mtb__radar__sensing_8c_1ab7a918014710ac976948037692c9169d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void radar_sensing_event_callback</definition>
        <argsstring>(ifx_radar_instance_t instance, HMI_RADAR_EVENT_T event, ifx_event_info_t *event_info, void *data)</argsstring>
        <name>radar_sensing_event_callback</name>
        <param>
          <type>ifx_radar_instance_t</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>HMI_RADAR_EVENT_T</type>
          <declname>event</declname>
        </param>
        <param>
          <type>ifx_event_info_t *</type>
          <declname>event_info</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="83" column="13" bodyfile="mtb_radar_sensing.c" bodystart="83" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="mtb__radar__sensing_8c_1a635efa966a0555ca96c1ad6de77342c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void radar_device_callback</definition>
        <argsstring>(ifx_radar_fmcw_frame_t *frame, const void *data)</argsstring>
        <name>radar_device_callback</name>
        <param>
          <type>ifx_radar_fmcw_frame_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="101" column="13" bodyfile="mtb_radar_sensing.c" bodystart="101" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="mtb__radar__sensing_8c_1abcf740c05472ff122a54c4efbc628ad2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t mtb_radar_sensing_count_antennas</definition>
        <argsstring>(uint8_t rx_mask)</argsstring>
        <name>mtb_radar_sensing_count_antennas</name>
        <param>
          <type>uint8_t</type>
          <declname>rx_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="114" column="16" bodyfile="mtb_radar_sensing.c" bodystart="114" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga0c0884ad690b8bb8b04b12b98bf36644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_init</definition>
        <argsstring>(mtb_radar_sensing_context_t *context, const mtb_radar_sensing_hw_cfg_t *hw_cfg, mtb_radar_sensing_mask_t event_mask)</argsstring>
        <name>mtb_radar_sensing_init</name>
        <param>
          <type><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="structmtb__radar__sensing__hw__cfg__t" kindref="compound">mtb_radar_sensing_hw_cfg_t</ref> *</type>
          <declname>hw_cfg</declname>
        </param>
        <param>
          <type><ref refid="group__group__mtb__radar__sensing__structures_1ga4d524c7a2479e9377cecfb99467d2d7f" kindref="member">mtb_radar_sensing_mask_t</ref></type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>Export Functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allocates a new context of radar. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="135" column="11" bodyfile="mtb_radar_sensing.c" bodystart="135" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_set_parameter</definition>
        <argsstring>(const mtb_radar_sensing_context_t *context, const char *key, const char *value)</argsstring>
        <name>mtb_radar_sensing_set_parameter</name>
        <param>
          <type>const <ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>This function sets the value for a configuration parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It is not thread-safe to make calls to <ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter()</ref> while <ref refid="group__group__mtb__radar__sensing__high__level_1ga76e796a7ad2a447185b35b83ec7137e2" kindref="member">mtb_radar_sensing_process()</ref> is still active. A workaround in FreeRTOS would be to use each function in a different task and synchronize access via a mutex.</para>
</simplesect>
Supported keys and values for presence detection: <table rows="3" cols="4"><row>
<entry thead="yes"><para>key </para>
</entry><entry thead="yes"><para>default value </para>
</entry><entry thead="yes"><para>valid values </para>
</entry><entry thead="yes"><para>description </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_presence_range_max&quot;</para>
</entry><entry thead="no"><para>&quot;2.0&quot;</para>
</entry><entry thead="no"><para>0.66 - 10.2 m</para>
</entry><entry thead="no"><para>Maximum detection range. It is the maximum distance within which a target is detected. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_presence_sensitivity&quot;</para>
</entry><entry thead="no"><para>&quot;medium&quot;</para>
</entry><entry thead="no"><para>&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;</para>
</entry><entry thead="no"><para>Adjusts the threshold values used in macro and micro movement detection. <linebreak/>
 High sensitivity would mean higher responsiveness towards macro and micro movements. </para>
</entry></row>
</table>
</para>
<para>Supported keys and values for entrance counter: <table rows="9" cols="4"><row>
<entry thead="yes"><para>key </para>
</entry><entry thead="yes"><para>default value </para>
</entry><entry thead="yes"><para>valid values/range </para>
</entry><entry thead="yes"><para>description </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_installation&quot;</para>
</entry><entry thead="no"><para>&quot;side&quot;</para>
</entry><entry thead="no"><para>&quot;ceiling&quot;, &quot;side&quot;</para>
</entry><entry thead="no"><para>The location of sensor installation. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_orientation&quot;</para>
</entry><entry thead="no"><para>&quot;portrait&quot;</para>
</entry><entry thead="no"><para>&quot;portrait&quot;, &quot;landscape&quot;</para>
</entry><entry thead="no"><para>The orientation of sensor. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_ceiling_height&quot;</para>
</entry><entry thead="no"><para>&quot;2.5&quot;</para>
</entry><entry thead="no"><para>0.0 - 3.0 m</para>
</entry><entry thead="no"><para>The height at which the sensor is mounted. This parameter is only effective for a &quot;ceiling&quot; installation. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_entrance_width&quot;</para>
</entry><entry thead="no"><para>&quot;1.0&quot;</para>
</entry><entry thead="no"><para>0.0 - 3.0 m</para>
</entry><entry thead="no"><para>The width of the passage or the entrance. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_sensitivity&quot;</para>
</entry><entry thead="no"><para>&quot;0.5&quot;</para>
</entry><entry thead="no"><para>0.0 - 1.0</para>
</entry><entry thead="no"><para>Sensitivity of counter. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_traffic_light_zone&quot;</para>
</entry><entry thead="no"><para>&quot;1.0&quot;</para>
</entry><entry thead="no"><para>0.0 - 1.0 m</para>
</entry><entry thead="no"><para>The width of radar field of view that represents the detection zone. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_reverse&quot;</para>
</entry><entry thead="no"><para>&quot;false&quot;</para>
</entry><entry thead="no"><para>&quot;true&quot;, &quot;false&quot;</para>
</entry><entry thead="no"><para>Option to reverse directionality of counter. </para>
</entry></row>
<row>
<entry thead="no"><para>&quot;radar_counter_min_person_height&quot;</para>
</entry><entry thead="no"><para>&quot;1.0&quot;</para>
</entry><entry thead="no"><para>0.0 - 2.0 m</para>
</entry><entry thead="no"><para>The minimum height of a person that is considered for detection. This is used to filter out pets. </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of configuration parameter that is to be set (e.g. &quot;radar_presence_range_max&quot;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the configuration parameter that is to be set as character string (e.g. &quot;1.0&quot;). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="244" column="11" bodyfile="mtb_radar_sensing.c" bodystart="244" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga1dfcc048a572de614d64169eec620e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_get_parameter</definition>
        <argsstring>(const mtb_radar_sensing_context_t *context, const char *key, char *value, size_t size)</argsstring>
        <name>mtb_radar_sensing_get_parameter</name>
        <param>
          <type>const <ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function gets the value of a configuration parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of configuration parameter that is to be read (e.g. &quot;radar_presence_range_max&quot;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer where the read value will be written to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the string buffer. If size of the string buffer is not large enough a failure status is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="382" column="11" bodyfile="mtb_radar_sensing.c" bodystart="382" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__callbacks_1ga972c87798ddc18542625e8c6052ea580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_register_callback</definition>
        <argsstring>(mtb_radar_sensing_context_t *context, mtb_radar_sensing_callback_t callback, void *data)</argsstring>
        <name>mtb_radar_sensing_register_callback</name>
        <param>
          <type><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__group__mtb__radar__sensing__callbacks_1ga60a125019df36616a00d86da3c68094b" kindref="member">mtb_radar_sensing_callback_t</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>This function registers callback for radar service. </para>
        </briefdescription>
        <detaileddescription>
<para>Callback is invoked as soon as an event is detected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data pointer that is passed to the invoke of the event callback. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="490" column="11" bodyfile="mtb_radar_sensing.c" bodystart="490" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga76e796a7ad2a447185b35b83ec7137e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_process</definition>
        <argsstring>(const mtb_radar_sensing_context_t *context, mtb_radar_sensing_timestamp_t timestamp)</argsstring>
        <name>mtb_radar_sensing_process</name>
        <param>
          <type>const <ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__group__mtb__radar__sensing__structures_1gade89becc61733734ed51c9cb78feee64" kindref="member">mtb_radar_sensing_timestamp_t</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>This function processes time domain data acquired from radar. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__group__mtb__radar__sensing__high__level_1ga12b35625c1e6efe75816f67e2b479434" kindref="member">mtb_radar_sensing_enable</ref> must be called prior to using this function. Must be called periodically from your main loop.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>System timestamp that will be used to approximate event timestamps in milliseconds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="510" column="11" bodyfile="mtb_radar_sensing.c" bodystart="510" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga12b35625c1e6efe75816f67e2b479434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_enable</definition>
        <argsstring>(const mtb_radar_sensing_context_t *context)</argsstring>
        <name>mtb_radar_sensing_enable</name>
        <param>
          <type>const <ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This function enables RadarSensing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="539" column="11" bodyfile="mtb_radar_sensing.c" bodystart="539" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga07c962fe364bb14c7cd48adf7c8a484d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_disable</definition>
        <argsstring>(const mtb_radar_sensing_context_t *context)</argsstring>
        <name>mtb_radar_sensing_disable</name>
        <param>
          <type>const <ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This function disables RadarSensing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="556" column="11" bodyfile="mtb_radar_sensing.c" bodystart="556" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga5793a52142f8f6e92ebc21b319fb77eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_radar_sensing_free</definition>
        <argsstring>(mtb_radar_sensing_context_t *context)</argsstring>
        <name>mtb_radar_sensing_free</name>
        <param>
          <type><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This functions frees up resources used by RadarSensing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of radar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cy_rslt_t A success or a failure status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="573" column="11" bodyfile="mtb_radar_sensing.c" bodystart="573" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mtb__radar__sensing__high__level_1ga881766eab1b5f3fe13d070ca05896eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtb_radar_sensing_platform_set_malloc_free</definition>
        <argsstring>(void *(*malloc_func)(size_t), void(*free_func)(void *))</argsstring>
        <name>mtb_radar_sensing_platform_set_malloc_free</name>
        <param>
          <type>void *(*)(size_t)</type>
          <declname>malloc_func</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
<para>This function sets the memory-managment functions used by the library. </para>
        </briefdescription>
        <detaileddescription>
<para>If your environment provides an alternative to the libc allocator functions, you can set them with function <simplesect kind="note"><para>Must be called before <ref refid="group__group__mtb__radar__sensing__high__level_1ga0c0884ad690b8bb8b04b12b98bf36644" kindref="member">mtb_radar_sensing_init</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>malloc_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer to the malloc function implementation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_func</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer to the free function implementation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mtb_radar_sensing.c" line="600" column="6" bodyfile="mtb_radar_sensing.c" bodystart="600" bodyend="604"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>===========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2021<sp/>Infineon<sp/>Technologies<sp/>AG.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>===========================================================================</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>===========================================================================</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>Infineon<sp/>Technologies<sp/>AG<sp/>(INFINEON)<sp/>is<sp/>supplying<sp/>this<sp/>file<sp/>for<sp/>use</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>exclusively<sp/>with<sp/>Infineon&apos;s<sp/>sensor<sp/>products.<sp/>This<sp/>file<sp/>can<sp/>be<sp/>freely</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>distributed<sp/>within<sp/>development<sp/>tools<sp/>and<sp/>software<sp/>supporting<sp/>such</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>products.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;.<sp/><sp/>NO<sp/>WARRANTIES,<sp/>WHETHER<sp/>EXPRESS,<sp/>IMPLIED</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>OR<sp/>STATUTORY,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>APPLY<sp/>TO<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>INFINEON<sp/>SHALL<sp/>NOT,<sp/>IN<sp/>ANY<sp/>CIRCUMSTANCES,<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES,<sp/>FOR<sp/>ANY<sp/>REASON</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>WHATSOEVER.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/>===========================================================================</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Ifx_RadarFMCW.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ifx_radar_sensing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ifx_radar_sensing_rawdata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtb_radar_sensing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ifx_memory_alloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_RADAR_SENSING_ERROR(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>==<sp/>IFX_STATUS_OK)<sp/>?<sp/>CY_RSLT_SUCCESS<sp/>:\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR,<sp/>CY_RSLT_MODULE_RADAR_SENSING,<sp/>(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_radar_instance_t<sp/>radar_instance;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_radar_fmcw_context_t<sp/>ifx_radar_fmcw_context;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__callbacks_1ga60a125019df36616a00d86da3c68094b" kindref="member">mtb_radar_sensing_callback_t</ref><sp/>radar_sensing_callback;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*radar_sensing_callback_data;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>frame_buffer_ff_ready;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>frame_buffer_ff_processed;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_ff_frame_t<sp/>frame_buffer_ff;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_installation[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_orientation[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_ceiling_height[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_entrance_width[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_sensitivity[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_traffic_light_zone[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_reverse[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_counter_min_person_height[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_presence_range_max[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>radar_presence_sensitivity[IFX_RADAR_SENSING_MAX_VALUE_LENGTH];</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/>mtb_radar_sensing_t;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>convert2FF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ifx_radar_fmcw_frame_t<sp/>*frame,<sp/>ifx_ff_frame_t<sp/>*ff_frame)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>frame-&gt;num_rx;<sp/>i++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(frame-&gt;rx_data[0].rows<sp/>==<sp/>frame-&gt;rx_data[i].rows);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(frame-&gt;rx_data[0].columns<sp/>==<sp/>frame-&gt;rx_data[i].columns);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(ff_frame-&gt;nrx<sp/>==<sp/>frame-&gt;num_rx);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(ff_frame-&gt;nsamples<sp/>==<sp/>frame-&gt;rx_data[0].columns);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_ASSERT(ff_frame-&gt;nchirps<sp/>==<sp/>frame-&gt;rx_data[0].rows);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;num_rx<sp/>==<sp/>1U)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ff_frame-&gt;data<sp/>=<sp/>frame-&gt;rx_data[0].data;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frame-&gt;num_rx;<sp/>i++)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;ff_frame-&gt;data[i<sp/>*<sp/>frame-&gt;rx_data[0].rows<sp/>*<sp/>frame-&gt;rx_data[0].columns],</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)frame-&gt;rx_data[i].data,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>frame-&gt;rx_data[0].columns<sp/>*<sp/>frame-&gt;rx_data[0].rows);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radar_sensing_event_callback(ifx_radar_instance_t<sp/>instance,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HMI_RADAR_EVENT_T<sp/>event,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifx_event_info_t<sp/>*event_info,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>CY_UNUSED_PARAMETER(instance);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context<sp/>=<sp/>(<ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing-&gt;radar_sensing_callback<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_sensing_callback(context,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__structures_1ga5ba642740bd880dad39d8e9da2610793" kindref="member">mtb_radar_sensing_event_t</ref>)event,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structmtb__radar__sensing__event__info__t" kindref="compound">mtb_radar_sensing_event_info_t</ref><sp/>*)event_info,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_sensing_callback_data);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radar_device_callback(ifx_radar_fmcw_frame_t<sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*)data;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing-&gt;frame_buffer_ff_processed)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff_processed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert2FF(frame,<sp/>&amp;radar_sensing-&gt;frame_buffer_ff);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff_ready<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;complete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>mtb_radar_sensing_count_antennas(uint8_t<sp/>rx_mask)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>num_antennas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mask<sp/>=<sp/>rx_mask;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mask<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/>0x01)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_antennas;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_antennas;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga0c0884ad690b8bb8b04b12b98bf36644" kindref="member">mtb_radar_sensing_init</ref>(<ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__hw__cfg__t" kindref="compound">mtb_radar_sensing_hw_cfg_t</ref><sp/>*hw_cfg,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__structures_1ga4d524c7a2479e9377cecfb99467d2d7f" kindref="member">mtb_radar_sensing_mask_t</ref><sp/>event_mask)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((context<sp/>==<sp/>NULL)<sp/>||<sp/>(hw_cfg<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(event_mask<sp/>&amp;<sp/>(<ref refid="group__group__mtb__radar__sensing__structures_1gga4d524c7a2479e9377cecfb99467d2d7facdeca8a2712f56b56673d294c809e0a1" kindref="member">MTB_RADAR_SENSING_MASK_PRESENCE_EVENTS</ref><sp/>|<sp/><ref refid="group__group__mtb__radar__sensing__structures_1gga4d524c7a2479e9377cecfb99467d2d7fa479f9b8eb4e8fcc1447ede4f4813c859" kindref="member">MTB_RADAR_SENSING_MASK_COUNTER_EVENTS</ref>)))<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>ifx_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mtb_radar_sensing_t));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gace63dc7338f2e04f6e8b8090ab927600" kindref="member">MTB_RADAR_SENSING_RESULT_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)memset(radar_sensing,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mtb_radar_sensing_t));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref><sp/>=<sp/>radar_sensing;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff_ready<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff_processed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_alloc(&amp;(radar_sensing-&gt;radar_instance),<sp/>(IFX_RADAR_SENSING_MASK_T)event_mask)<sp/>!=<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga450b60f3b9a93db1a4ecf0c7791cf9e4" kindref="member">MTB_RADAR_SENSING_RESULT_INIT_ERROR</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>default<sp/>values<sp/>as<sp/>string<sp/>and<sp/>likewise<sp/>fill<sp/>our<sp/>wrapper<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((event_mask<sp/>&amp;<sp/><ref refid="group__group__mtb__radar__sensing__structures_1gga4d524c7a2479e9377cecfb99467d2d7fa479f9b8eb4e8fcc1447ede4f4813c859" kindref="member">MTB_RADAR_SENSING_MASK_COUNTER_EVENTS</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_installation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;side&quot;</highlight><highlight class="normal">)<sp/>!=</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_orientation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;portrait&quot;</highlight><highlight class="normal">)<sp/>!=</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_ceiling_height&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2.5&quot;</highlight><highlight class="normal">)<sp/>!=</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_entrance_width&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">)<sp/>!=</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_sensitivity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_traffic_light_zone&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">)<sp/>!=</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_reverse&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_counter_min_person_height&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal">)<sp/>!=</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga450b60f3b9a93db1a4ecf0c7791cf9e4" kindref="member">MTB_RADAR_SENSING_RESULT_INIT_ERROR</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((event_mask<sp/>&amp;<sp/><ref refid="group__group__mtb__radar__sensing__structures_1gga4d524c7a2479e9377cecfb99467d2d7facdeca8a2712f56b56673d294c809e0a1" kindref="member">MTB_RADAR_SENSING_MASK_PRESENCE_EVENTS</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_presence_range_max&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2.0&quot;</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>)<sp/>||</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(context,<sp/></highlight><highlight class="stringliteral">&quot;radar_presence_sensitivity&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;medium&quot;</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga450b60f3b9a93db1a4ecf0c7791cf9e4" kindref="member">MTB_RADAR_SENSING_RESULT_INIT_ERROR</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_Device_Config_t<sp/>config;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_update_device_configuration(radar_sensing-&gt;radar_instance,<sp/>&amp;config)<sp/>!=<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga450b60f3b9a93db1a4ecf0c7791cf9e4" kindref="member">MTB_RADAR_SENSING_RESULT_INIT_ERROR</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>radar<sp/>rawdata<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff.nchirps<sp/>=<sp/>config.num_chirps_per_frame;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff.nsamples<sp/>=<sp/>config.num_samples_per_chirp;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff.nrx<sp/>=<sp/>mtb_radar_sensing_count_antennas(config.rx_antenna_mask);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice_size<sp/>=<sp/>(size_t)radar_sensing-&gt;frame_buffer_ff.nsamples<sp/>*<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)radar_sensing-&gt;frame_buffer_ff.nchirps<sp/>*<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(size_t)radar_sensing-&gt;frame_buffer_ff.nrx;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff.data<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)ifx_malloc(slice_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radar_sensing-&gt;frame_buffer_ff.data<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga60464d3b1744789fcef956d7debaa7b1" kindref="member">MTB_RADAR_SENSING_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>configuration<sp/>explicitely<sp/>as<sp/>the<sp/>radar<sp/>interface<sp/>might<sp/>diverge<sp/>in<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_radar_fmcw_config_single_shape_t<sp/>radar_settings;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.num_samples_per_chirp<sp/>=<sp/>config.num_samples_per_chirp;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.num_chirps_per_frame<sp/>=<sp/>config.num_chirps_per_frame;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.adc_samplerate_hz<sp/>=<sp/>config.adc_samplerate_hz;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.frame_period_us<sp/>=<sp/>config.frame_period_us;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.lower_frequency_kHz<sp/>=<sp/>config.lower_frequency_kHz;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.upper_frequency_kHz<sp/>=<sp/>config.upper_frequency_kHz;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.bgt_tx_power<sp/>=<sp/>config.bgt_tx_power;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.rx_antenna_mask<sp/>=<sp/>config.rx_antenna_mask;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.chirp_to_chirp_time_100ps<sp/>=<sp/>config.chirp_to_chirp_time_100ps;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.if_gain_dB<sp/>=<sp/>config.if_gain_dB;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_settings.after_frame_power_mode<sp/>=<sp/>config.after_frame_power_mode;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>hardware<sp/>configuration<sp/>defined<sp/>by<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;ifx_radar_fmcw_context.hw_cfg<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ifx_radar_device_hw_context_t<sp/>*)hw_cfg;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Ifx_RadarFMCW_Init(&amp;(radar_sensing-&gt;ifx_radar_fmcw_context),<sp/>&amp;radar_settings)<sp/>!=<sp/>CY_RSLT_SUCCESS)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga450b60f3b9a93db1a4ecf0c7791cf9e4" kindref="member">MTB_RADAR_SENSING_RESULT_INIT_ERROR</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>Ifx_RadarFMCW_RegisterCallback(&amp;(radar_sensing-&gt;ifx_radar_fmcw_context),<sp/>radar_device_callback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)context);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga2a7d61bf5d0380be2a6937033e118045" kindref="member">mtb_radar_sensing_set_parameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((context<sp/>==<sp/>NULL)<sp/>||<sp/>(key<sp/>==<sp/>NULL)<sp/>||<sp/>(value<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_installation&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_installation&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_installation,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_orientation&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_orientation&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_orientation,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_ceiling_height&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_ceiling_height&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_ceiling_height,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_entrance_width&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_entrance_width&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_entrance_width,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_sensitivity&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_sensitivity&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_sensitivity,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_traffic_light_zone&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_traffic_light_zone&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_traffic_light_zone,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_reverse&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_reverse&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_reverse,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_min_person_height&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;counter_min_person_height&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_counter_min_person_height,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_presence_range_max&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;presence_range_max&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_presence_range_max,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_presence_sensitivity&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_set_configuration(radar_sensing-&gt;radar_instance,<sp/></highlight><highlight class="stringliteral">&quot;sensitivity&quot;</highlight><highlight class="normal">,<sp/>value)<sp/>==<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(radar_sensing-&gt;radar_presence_sensitivity,<sp/>value,<sp/>IFX_RADAR_SENSING_MAX_VALUE_LENGTH<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gad10f75637f78b75bb5c72dc5a35c08cb" kindref="member">MTB_RADAR_SENSING_RESULT_CONFIGURATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga1dfcc048a572de614d64169eec620e4d" kindref="member">mtb_radar_sensing_get_parameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((context<sp/>==<sp/>NULL)<sp/>||<sp/>(key<sp/>==<sp/>NULL)<sp/>||<sp/>(value<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_installation&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_installation))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,<sp/>radar_sensing-&gt;radar_counter_installation,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_orientation&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_orientation))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,<sp/>radar_sensing-&gt;radar_counter_orientation,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_ceiling_height&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_ceiling_height))</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_counter_ceiling_height,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_entrance_width&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_entrance_width))</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_counter_entrance_width,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_sensitivity&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_sensitivity))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,<sp/>radar_sensing-&gt;radar_counter_sensitivity,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_traffic_light_zone&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_traffic_light_zone))</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_counter_traffic_light_zone,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_reverse&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_reverse))</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,<sp/>radar_sensing-&gt;radar_counter_reverse,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_counter_min_person_height&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_counter_min_person_height))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_counter_min_person_height,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_presence_range_max&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_presence_range_max))</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,<sp/>radar_sensing-&gt;radar_presence_range_max,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;radar_presence_sensitivity&quot;</highlight><highlight class="normal">,<sp/>key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>-<sp/>1)<sp/>&lt;<sp/>strlen(radar_sensing-&gt;radar_presence_sensitivity))</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)strncpy(value,<sp/>radar_sensing-&gt;radar_presence_sensitivity,<sp/>size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__callbacks_1ga972c87798ddc18542625e8c6052ea580" kindref="member">mtb_radar_sensing_register_callback</ref>(<ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__mtb__radar__sensing__callbacks_1ga60a125019df36616a00d86da3c68094b" kindref="member">mtb_radar_sensing_callback_t</ref><sp/>callback,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((context<sp/>==<sp/>NULL)<sp/>||<sp/>(callback<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_sensing_callback_data<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>radar_sensing-&gt;radar_sensing_callback<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MTB_RADAR_SENSING_ERROR(ifx_radar_setcallback(radar_sensing-&gt;radar_instance,<sp/>radar_sensing_event_callback,<sp/>context));</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga76e796a7ad2a447185b35b83ec7137e2" kindref="member">mtb_radar_sensing_process</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context,<sp/><ref refid="group__group__mtb__radar__sensing__structures_1gade89becc61733734ed51c9cb78feee64" kindref="member">mtb_radar_sensing_timestamp_t</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radar_sensing-&gt;frame_buffer_ff_ready)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff_ready<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;%02d:%02d.%03d<sp/>got<sp/>frame<sp/>(%d,%d,%d)\r\n&quot;,<sp/>(int)(timestamp<sp/>/<sp/>1000<sp/>/<sp/>60),<sp/>(int)(timestamp<sp/>/<sp/>1000<sp/>%<sp/>60),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(int)(timestamp<sp/>%<sp/>1000),<sp/>(int)radar_sensing-&gt;frame_buffer_ff.nrx,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(int)radar_sensing-&gt;frame_buffer_ff.nchirps,<sp/>(int)radar_sensing-&gt;frame_buffer_ff.nsamples);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_process_ff_frame(radar_sensing-&gt;radar_instance,<sp/>&amp;radar_sensing-&gt;frame_buffer_ff,<sp/>timestamp)<sp/>!=</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga3f53e4fb267624a69ee5698bed95b97e" kindref="member">MTB_RADAR_SENSING_RESULT_PROCESS_ERROR</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radar_sensing-&gt;frame_buffer_ff_processed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga12b35625c1e6efe75816f67e2b479434" kindref="member">mtb_radar_sensing_enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>Ifx_RadarFMCW_Enable(&amp;radar_sensing-&gt;ifx_radar_fmcw_context);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga07c962fe364bb14c7cd48adf7c8a484d" kindref="member">mtb_radar_sensing_disable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>Ifx_RadarFMCW_Disable(&amp;radar_sensing-&gt;ifx_radar_fmcw_context);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga5793a52142f8f6e92ebc21b319fb77eb" kindref="member">mtb_radar_sensing_free</ref>(<ref refid="structmtb__radar__sensing__context__t" kindref="compound">mtb_radar_sensing_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>mtb_radar_sensing_t<sp/>*radar_sensing<sp/>=<sp/>(mtb_radar_sensing_t<sp/>*)context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(radar_sensing<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga64a9ee2b9fd4adb84817a4912b265717" kindref="member">MTB_RADAR_SENSING_RESULT_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>Ifx_RadarFMCW_Destroy(&amp;radar_sensing-&gt;ifx_radar_fmcw_context);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_free(radar_sensing-&gt;frame_buffer_ff.data);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifx_radar_free(&amp;(radar_sensing-&gt;radar_instance))<sp/>!=<sp/>IFX_STATUS_OK)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1gace63dc7338f2e04f6e8b8090ab927600" kindref="member">MTB_RADAR_SENSING_RESULT_MEM_ERROR</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>ifx_free(radar_sensing);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structmtb__radar__sensing__context__t_1aae7eabca7f8295a71309e5cac052318e" kindref="member">internal</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__macros_1ga253b91f78f8359daba083bec491afd12" kindref="member">MTB_RADAR_SENSING_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__group__mtb__radar__sensing__high__level_1ga881766eab1b5f3fe13d070ca05896eee" kindref="member">mtb_radar_sensing_platform_set_malloc_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>(*malloc_func)(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*free_func)(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)ifx_platform_set_malloc_free(malloc_func,<sp/>free_func);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="mtb_radar_sensing.c"/>
  </compounddef>
</doxygen>
